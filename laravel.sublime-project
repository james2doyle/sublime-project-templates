{
	"folders": [
		{
			"path": ".",
			"file_exclude_patterns": [
				".gitkeep",
				"*.lock",
				"*lock.json",
				"artisan",
				"database/*.sqlite",
				".phpstorm.meta.php",
				"_ide_helper.php",
				"_ide_helper_models.php",
				"programmatic-types.graphql",
				"_lighthouse_ide_helper.php"
			],
			"folder_exclude_patterns": [
				".vemto",
				"vendor",
				"node_modules",
				"storage",
				"bootstrap/cache",
				"public/js",
				"public/css"
			],
			"follow_symlinks": true
		}
	],
	"build_systems": [
		{
			"name": "Project - Lint",
			"working_dir": "$project_path",
			"shell_cmd": "composer run lint"
		},
		{
			"name": "Project - Test",
			"working_dir": "$project_path",
			"shell_cmd": "composer run test"
		},
		{
			"name": "Project - Mess Detector",
			"working_dir": "$project_path",
			"shell_cmd": "composer run md"
		},
		{
			"name": "Project - IDE Helper",
			"working_dir": "$project_path",
			"shell_cmd": "php artisan ide-helper:models -n"
		},
		{
			"name": "Project - Open Test",
			"working_dir": "$project_path",
			"shell_cmd": "find tests -print | grep $file_base_name | sed -n 1p | xargs subl"
		},
		{
			"name": "Project - Test File",
			"working_dir": "$project_path",
			"shell_cmd": "php artisan test --filter $file_base_name"
		},
		{
			"name": "Project - Format Blade File",
			"working_dir": "$project_path",
			"shell_cmd": "./node_modules/.bin/blade-formatter --write $file"
		},
		{
			"name": "Project - Format All Blade Files",
			"working_dir": "$project_path",
			"shell_cmd": "./node_modules/.bin/blade-formatter --write \"resources/views/**/*.blade.php\""
		},
		{
			"name": "Project - Open Log",
			"working_dir": "$project_path",
			"shell_cmd": "subl storage/logs/*.log",
			"quiet": true
		},
		{
			"name": "Project - Clear Logs",
			"working_dir": "$project_path",
			"shell_cmd": "composer run clear-logs",
			"quiet": true
		},
		{
			"name": "Project - Mago fmt",
			"working_dir": "$project_path",
			"shell_cmd": "mago fmt $file",
			"quiet": true
		},
		{
			"name": "Project - Mago lint",
			"working_dir": "$project_path",
			"shell_cmd": "mago lint $file",
			"quiet": true
		},
		{
			"name": "Project - Run in Artisan",
			"working_dir": "$project_path",
			"target": "exec_selection",
			"cancel": { "kill": true },
			"shell_cmd": "php artisan tinker --execute \"print_r(SELECTION)\""
		},
		{
			"name": "Project - Sort CSS Classes",
			"working_dir": "$project_path",
			"shell_cmd": "rustywind --write $file"
		}
	],
	"settings": {
		"tab_size": 4,
		"translate_tabs_to_spaces": true,
		"jsdocs_return_tag": "@return",
		"lsp_format_on_save": true,
		"LSP": {
			"phpactor": {
				"enabled": false
			},
			"blade": {
				"enabled": false
			},
			"LSP-html": {
				"enabled": false
			},
			"LSP-eslint": {
				"enabled": false
			},
			"LSP-biome": {
				"enabled": true
			},
			"formatters": {
				"source.ts": "LSP-biome",
				"source.js": "LSP-biome",
				"text.html.basic": "LSP-biome",
				"embedding.php": "LSP-intelephense"
			}
		}
	},
	"syntax_override": {
		"\\.env.*$": ["ShellScript", "Shell-Unix-Generic"],
		"\\.inc$": ["PHP", "PHP"],
		"\\.*rc$": ["JSON", "JSON"],
		"livewire.*\\.blade\\.php$": ["PHP", "PHP"],
		"(!?livewire.*)\\.blade\\.php$": [
			"Laravel Blade",
			"Syntaxes",
			"HTML (Blade)"
		],
		"\\.css$": ["Tailwind CSS", "Tailwind CSS"]
	}
}
